[] make it 2-player
    [] make the game hold multiple snakes (but only set one)
        instead of snake.mv(game, point) it should be game.mv(snake, point)
        OR snake.mv(self, game, point)
            THIS ONE
        [done] OR mv(game, point)
        [done] try game.mv(snake, point) or game.mv(point)
        [] have two snakes that are both controlled by the same person.
            [] split project into one file for each of:
                [] Snake
                [] Level
                [] Game
            [done] generate them in 2 random spots.
            [done] make them both move
            [done] remove duplicate code.
            [done] get collision working again
            [done] make the game end when any die.
            [done] make one snake stop
            [done] make the game end when both die.
        [] find all snakes[0], and make it more intelligent
        [] make mv have everything passed in individually?
            This way we could run it for each snake?
            and keep the controls separate? (main issue)
        [] THEN change snake.update to use self instead of game
    [] allow the player to hit '2' to add a second snake

[] keep track of high scores locally.

Rust Notes:
Wouldn't it make more sense for &thing to be the default?
    Order would be as follows:
        immutable borrow (&thing)
        ownership change (thing)
        mutable borrow (&mut thing)
Why are "references" a thing at all?
    There should just be a notation in the function description for what it needs,
    and outside it should be invisible...?
    I just want to avoid having to do ...map(|&&x| x*2)...
        but other times ...filter(|&x| x*2)...
    (Maybe I just don't understand enough yet.)
